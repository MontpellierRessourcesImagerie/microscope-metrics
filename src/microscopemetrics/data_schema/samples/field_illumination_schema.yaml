id: https://github.com/MontpellierRessourcesImagerie/microscope-metrics/blob/main/src/microscopemetrics/data_schema/samples/field_illumination_schema.yaml
name: microscopemetrics_samples_field_illumination_schema
prefixes:
#  metrics: https://github.com/MontpellierRessourcesImagerie/microscope-metrics/blob/main/src/microscopemetrics/model/
#imports:
#  - metrics:types
  linkml: https://w3id.org/linkml/
imports:
  - linkml:types
  - ../core_schema  # TODO: change to metrics:core_schema

default_range: string


classes:
  FieldIlluminationDataset:
    is_a: MetricsDataset
    description: >-
      A field illumination dataset
    slots:
      - image
      - bit_depth
      - saturation_threshold
      - center_threshold
      - corner_fraction
      - sigma
      - intensity_map_size
      - regions_properties_table
      - intensity_map
      - intensity_plot_data
    slot_usage:
      name:
        ifabsent: string(FieldIlluminationDataset)
      description:
        ifabsent: string(This dataset contains the results of the field illumination analysis)
      inputs:
        equals_string:
          - image
          - bit_depth
          - saturation_threshold
          - center_threshold
          - corner_fraction
          - sigma
          - intensity_map_size
      outputs:
        equals_string:
          - regions_properties_table
          - intensity_map
          - intensity_plot_data
#    rules:
#      - preconditions:
#          slot_conditions:
#            processed:
#              equals_number: 1
#        postconditions:
#          slot_conditions:
#            regions_properties_table:
#              required: true
#            intensity_map:
#              required: true
#            intensity_plot_data:
#              required: true


slots:
  image:
    range: ImageAsNumpy
    description: >-
      Input parameter: homogeneity image provided as a numpy array in the order. While the analysis accepts 
      multiple channels, the T and Z dimensions are expected to be 1.
    required: true
    multivalued: false
  bit_depth:
    range: integer
    description: >-
      Input parameter: detector bit depth
    required: false
    multivalued: false
    minimum_value: 1
    maximum_value: 64
  saturation_threshold:
    range: float
    description: >-
      Input parameter: tolerated saturation threshold. If the amount of saturated pixels is above this threshold, 
      the image is considered as saturated and the analysis is not performed.
    required: true
    multivalued: false
    ifabsent: float(0.01)
    minimum_value: 0.0
    maximum_value: 1.0
  center_threshold:
    range: float
    description: >-
      Input parameter: relative threshold for what is going to be considered as the intensity center of the image
    required: true
    multivalued: false
    ifabsent: float(0.9)
    minimum_value: 0.0
    maximum_value: 1.0
  corner_fraction:
    range: float
    description: >-
      Input parameter: the proportion of the image to be considered as corner or center
    annotations:
      review: A very useful class that is well defined
    required: true
    multivalued: false
    ifabsent: float(0.1)
    minimum_value: 0.01
    maximum_value: 0.49
  sigma:
    range: float
    description: >-
      Input parameter: the sigma for the smoothing gaussian filter to be applied prior to analysis
    required: true
    multivalued: false
    ifabsent: float(2.0)
    minimum_value: 0.0
    maximum_value: 100.0
  intensity_map_size:
    range: integer
    description: >-
      Input parameter: the size of the output intensity map in pixels
    required: true
    multivalued: false
    ifabsent: int(64)
    minimum_value: 5
    maximum_value: 512
  regions_properties_table:
    range: TableAsPandasDF
    description: >-
      Output: table containing the properties of the regions
    multivalued: false
  intensity_map:
    range: Image5D
    description: >-
      Output: intensity map provided as a numpy array with 5D matching the order of the input image
    multivalued: false
  intensity_plot_data:
    range: TableAsPandasDF
    description: >-
      Output: table containing intensity plot data for each channel in the diagonal 
      as well as the horizontal and vertical image centers
